{"version":3,"sources":["functions/constants.js","components/account.js","functions/trainingContent.js","functions/clientSideValidation.js","functions/evaluate.js","components/query.js","components/trainingSelector.js","App.js","serviceWorker.js","index.js"],"names":["base_url","Account","state","showButtons","action","username","pword","confpword","error","handleChange","event","_this","setState","Object","defineProperty","target","id","value","handleSubmit","preventDefault","endpoint","requestBody","password","password_confirmation","fetch","body","JSON","stringify","method","headers","Accept","Content-Type","then","response","json","handleResponse","catch","console","log","data","message","user_id","props","setSession","_this2","this","react_default","a","createElement","className","onClick","onSubmit","type","placeholder","onChange","Component","trainingContent","training","content","situationHeader","situationBody","ninjaMoves","clientSideValidation","query","toLowerCase","replace","test","syntax","globalDecision","_callee","promise","regenerator_default","wrap","_context","prev","next","checkData","Promise","res","rej","setTimeout","sent","abrupt","stop","queryCheck","query_statement","responseCheck","checkResponse","answerCheck","checkAnswer","results","length","spirit_animal","friend_name","band_name","bands","i","push","includes","Query","sensei","Authorization","concat","session","handleErrors","str","split","getTableHeaders","keys","renderTableHeaders","map","key","index","renderTableData","tabledata","children","j","checkWithTheSensei","_x","_x2","_evaluate","apply","arguments","evaluate","TrainingSelector","handleSelect","Fragment","default","item","components_query","userId","App","token","localStorage","setItem","getItem","account","trainingSelector","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73dd0d41.chunk.js","sourcesContent":["//dev server\n//const base_url = \"http://localhost:3000\"\n\n//prod server\nconst base_url = \"https://sql-sensei.herokuapp.com\"\n\nexport {base_url}\n","import React, {Component} from \"react\"\nimport {base_url} from \"../functions/constants.js\"\n\nclass Account extends Component {\n  state = {\n    showButtons: true,\n    action: null,\n    username: \"\",\n    pword: \"\",\n    confpword: \"\",\n    error: null\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n  handleSubmit = (event) => {\n    event.preventDefault()\n    let endpoint = base_url\n    let requestBody = {}\n    if (this.state.action === \"create\") {\n      endpoint += \"/users\"\n      requestBody = {\n        username: this.state.username,\n        password: this.state.pword,\n        password_confirmation: this.state.confpword\n      }\n    } else {\n      endpoint += \"/users/login\"\n      requestBody = {\n        username: this.state.username,\n        password: this.state.pword\n      }\n    }\n    fetch(endpoint, {\n      body: JSON.stringify(requestBody),\n      method: \"POST\",\n      headers: {\n        \"Accept\":\"application/json\",\n        \"Content-Type\":\"application/json\"\n      }\n    })\n    .then(response => response.json())\n    .then(json => this.handleResponse(json))\n    .catch(error => console.log(error))\n  }\n  handleResponse = (data) => {\n    if (data.password) {\n      this.setState({\n        error: \"Please check your password and try again\"\n      })\n    } else if (data.message) {\n      this.setState({\n        error: data.message\n      })\n    } else if (data.username[0] === \"has already been taken\") {\n      this.setState({\n        error: \"That username has already been taken. Try another one!\"\n      })\n    } else if (data.user_id) {\n      this.setState({\n        showButtons: true,\n        action: null,\n        username: \"\",\n        pword: \"\",\n        confpword: \"\",\n        error: null\n      })\n      this.props.setSession(data)\n    }\n  }\n  render() {\n    return (\n      <div className=\"account\">\n        <h2>Create an Account or Log In to train with The Sensei</h2>\n        {\n          this.state.showButtons ?\n          <div className=\"account-actions\">\n            <button onClick={() => {\n              this.setState({\n                action: \"create\",\n                showButtons: false})\n            }}>Create Account</button>\n            <button onClick={() => {\n              this.setState({\n                action: \"login\",\n                showButtons: false})\n            }}>Log In</button>\n          </div>\n          : null\n        }\n        {\n          this.state.action === \"create\" ?\n          <div className=\"create-account\">\n            <form onSubmit={this.handleSubmit}>\n              <input\n                id=\"username\"\n                type=\"text\"\n                value={this.state.username}\n                placeholder=\"username\"\n                onChange={this.handleChange}\n              />\n              <input\n                id=\"pword\"\n                type=\"password\"\n                value={this.state.pword}\n                placeholder=\"password\"\n                onChange={this.handleChange}\n              />\n              <input\n                id=\"confpword\"\n                type=\"password\"\n                value={this.state.confpword}\n                placeholder=\"confirm password\"\n                onChange={this.handleChange}\n              />\n              <input\n                type=\"submit\"\n                value=\"Create Account\"\n              />\n            </form>\n            {\n              this.state.error !== \"\" ?\n              <p>{this.state.error}</p>\n              : null\n            }\n            <p onClick={() => {\n              this.setState({\n                action: \"login\",\n                showButtons: false\n              })\n            }}>Log In to an existing account</p>\n          </div>\n          : null\n        }\n        {\n          this.state.action === \"login\" ?\n          <div className=\"log-in\">\n            <form onSubmit={this.handleSubmit}>\n              <input\n                id=\"username\"\n                type=\"text\"\n                value={this.state.username}\n                placeholder=\"username\"\n                onChange={this.handleChange}\n              />\n              <input\n                id=\"pword\"\n                type=\"password\"\n                value={this.state.pword}\n                placeholder=\"password\"\n                onChange={this.handleChange}\n              />\n              <input\n                type=\"submit\"\n                value=\"Log In\"\n              />\n            </form>\n            {\n              this.state.error !== \"\" ?\n              <p>{this.state.error}</p>\n              : null\n            }\n            <p onClick={() => {\n              this.setState({\n                action: \"create\",\n                showButtons: false\n              })\n            }}>Can't Log In? Create an Account</p>\n          </div>\n          : null\n        }\n      </div>\n    )\n  }\n}\n\nexport default Account\n","export default function trainingContent(training) {\n  const content = {\n    situationHeader: \"\",\n    situationBody: [],\n    ninjaMoves: \"\"\n  }\n  switch (training) {\n    case \"joinTraining1\":\n      content.situationHeader = \"2 Tables:\"\n      content.situationBody = [\"friends\", \"spirit_animals\"]\n      content.ninjaMoves = \"Find Chris Dirt Stevens' spirit animal! The correct ninja move must return only 1 row.\"\n      break;\n    case \"joinTraining2\":\n    content.situationHeader = \"2 Tables:\"\n    content.situationBody = [\"friends\", \"spirit_animals\"]\n    content.ninjaMoves = \"Find which friend doesn't have a spirit animal! The correct ninja move must return only 1 row.\"\n      break;\n    case \"joinTraining3\":\n    content.situationHeader = \"4 Tables:\"\n    content.situationBody = [\"friends\", \"spirit_animals\", \"friends_music\", \"bands\"]\n    content.ninjaMoves = \"Your friend's spirit animal is a mallard. Find their favorite bands!\"\n      break;\n    case \"joinTraining4\":\n    content.situationHeader = \"3 Tables:\"\n    content.situationBody = [\"friends\", \"friends_music\", \"bands\"]\n    content.ninjaMoves = \"Find the bands that none of your friends like!\"\n        break;\n    default:\n      return null\n  }\n  return content\n}\n","export default function clientSideValidation(query) {\n  //Lowercase\n  query = query.toLowerCase()\n  //remove line-breaks\n  query = query.replace(/\\n/g, \" \")\n  //remove escapes\n  query = query.replace(/\\\\/g, \"\")\n  //check for ending with ;, if not, add one\n  if (!/;$/.test(query)) {\n    query = query + \";\"\n  }\n  if (!/^select/i.test(query)) {\n    return {syntax: false, error: \"Make sure your query begins with SELECT\"}\n  }\n  if (!/from/i.test(query)) {\n    return {syntax: false, error: \"Make sure you're selecting FROM somthing\"}\n  }\n  if (!/friends/i.test(query) && !/spirit_animals/i.test(query) && !/friends_music/i.test(query) && !/bands/i.test(query)) {\n    return {syntax: false, error: \"Check your query. What table are you selecting from?\"}\n  }\n  if (/top \\d|top\\d/.test(query)) {\n    return {syntax: false, error: \"Remember in PostgreSQL, use LIMIT rather than TOP.\"}\n  }\n  return {syntax: true, query: query}\n}\n","import clientSideValidation from \"./clientSideValidation.js\"\nimport {base_url} from \"./constants.js\"\n\nlet globalDecision = \"\"\n\nexport default async function evaluate(training, query) {\n  checkData(training, query)\n  let promise = new Promise((res, rej) => {\n    setTimeout(() => res(globalDecision), 100)\n  })\n  let response = await promise\n  console.log(\"promise: \", promise)\n  console.log(\"evaluate response: \", response)\n  return response\n}\n\nconst checkData = (training, query) => {\n  const queryCheck = clientSideValidation(query)\n  if (queryCheck.syntax) {\n    fetch(base_url + \"/query\", {\n      body: JSON.stringify({query_statement: queryCheck.query}),\n      method: \"POST\",\n      headers: {\n        \"Accept\":\"application/json\",\n        \"Content-Type\":\"application/json\"\n      }\n    })\n    .then(response => response.json())\n    .then((json) => {\n      let responseCheck = checkResponse(training, json)\n      console.log(\"response from checkResponse: \", responseCheck)\n      console.log(\"setting globalDecision to: \", responseCheck)\n      globalDecision = responseCheck\n    })\n    .catch(error => console.log(error))\n    } else {\n      return false\n    }\n}\n\nconst checkResponse = (training, data) => {\n  if (data.syntax) {\n    let answerCheck = checkAnswer(training, data)\n    console.log(\"response from checkAnswer: \", answerCheck)\n    return answerCheck\n  } else {\n    return false\n  }\n}\n\nconst checkAnswer = (training, data) => {\n  switch (training) {\n    case \"joinTraining1\":\n      if (data.results.length === 1 && data.results[0].spirit_animal === \"ferret\") {\n        return true\n      } else {\n        return false\n      }\n    case \"joinTraining2\":\n      if (data.results.length === 1 && data.results[0].friend_name === \"Sandwich Waverly\") {\n        return true\n      } else {\n        return false\n      }\n    case \"joinTraining3\":\n      if (data.results.length === 3 && data.results[0].band_name) {\n        const bands = []\n        for (let i = 0; i < data.results.length; i++) {\n          bands.push(data.results[i].band_name)\n        }\n        if (bands.includes(\"Slipknot\") && bands.includes(\"Carlos Santana\") && bands.includes(\"Lady Gaga\")) {\n          return true\n        } else {\n          return false\n        }\n      } else {\n        return false\n      }\n    case \"joinTraining4\":\n      if (data.results.length === 14 && data.results[0].band_name) {\n        console.log(\"TRUTH CONDITION\")\n        const bands = []\n        for (let i = 0; i < data.results.length; i++) {\n          bands.push(data.results[i].band_name)\n        }\n        console.log(bands)\n        if (bands.includes(\"Limp Bizkit\") && bands.includes(\"Waylon Jennings\") && bands.includes(\"Guns N' Roses\") && bands.includes(\"Phil Collins\") && bands.includes(\"Madonna\") && bands.includes(\"Coldplay\") && bands.includes(\"The Who\") && bands.includes(\"White Stripes\") && bands.includes(\"Velvet Revolver\") && bands.includes(\"Destiny's Child\") && bands.includes(\"Black Flag\") && bands.includes(\"Bee Gees\") && bands.includes(\"Spinal Tap\") && bands.includes(\"Tool\")) {\n          return true\n        } else {\n          return false\n        }\n      } else {\n        return false\n      }\n    default:\n      return false\n  }\n}\n","import React, {Component} from \"react\"\nimport clientSideValidation from \"../functions/clientSideValidation.js\"\nimport evaluate from \"../functions/evaluate.js\"\nimport {base_url} from \"../functions/constants.js\"\nimport \"../App.css\"\n\nclass Query extends Component {\n  state = {\n    query: \"\",\n    results: [],\n    error: \"\",\n    sensei: \"\"\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n  handleSubmit = (event) => {\n    event.preventDefault()\n    const queryCheck = clientSideValidation(this.state.query)\n    if (queryCheck.syntax) {\n      fetch(base_url + \"/query\", {\n        body: JSON.stringify({query_statement: queryCheck.query}),\n        method: \"POST\",\n        headers: {\n          \"Accept\":\"application/json\",\n          \"Content-Type\":\"application/json\",\n          \"Authorization\":`Bearer ${this.props.session}`\n        }\n      })\n      .then(response => response.json())\n      .then(json => this.handleResponse(json))\n      .catch(error => console.log(error))\n    } else {\n      this.setState({\n        results: [],\n        error: queryCheck.error\n      })\n    }\n  }\n  handleResponse = (response) => {\n    if (response.syntax) {\n      this.setState({\n        results: response.results,\n        error: \"\"\n      })\n    } else if (response.syntax === false) {\n      this.setState({\n        results: [],\n        error: this.handleErrors(response.error)\n      })\n    } else if (response.message) {\n      this.setState({\n        results: [],\n        error: \"The SQL Sensei says: \" + response.message\n      })\n    } else {\n      this.setState({\n        results: [],\n        error: \"The SQL Sensei doesn't like your query. Try again.\"\n      })\n    }\n  }\n  handleErrors = (str) => {\n    if (/^PG/.test(str)) {\n      let error = str.toLowerCase()\n      error = error.replace(/\\n/g, \" \").replace(/\\\\/g, \"\").replace(/\"/g, \"'\")\n      const errorMessage = error.split(\"error: \")[1].split(\" line\")\n      return \"The SQL Sensei spots a syntax error: \" + errorMessage[0]\n    } else {\n      return str\n    }\n  }\n  getTableHeaders = () => {\n    return Object.keys(this.state.results[0])\n  }\n  renderTableHeaders = () => {\n    const headers = this.getTableHeaders()\n    return headers.map((key, index) => {\n      return <th key={index}>{key}</th>\n    })\n  }\n  renderTableData = () => {\n    const headers = this.getTableHeaders()\n    const tabledata = []\n    for (let i=0; i < this.state.results.length; i++) {\n      const children = []\n      for (let j=0; j < headers.length; j++) {\n        children.push(<td key={j}>{this.state.results[i][headers[j]]}</td>)\n      }\n      tabledata.push(<tr key={i}>{children}</tr>)\n    }\n    return tabledata\n  }\ncheckWithTheSensei = (training, query) => {\n  evaluate(training, query).then(response => console.log(\"Decision in React:\", response))\n  // const decision = evaluate(training, query)\n  // console.log(\"Decision: \", decision)\n}\n  render() {\n    return (\n      <div className=\"query\">\n        <form onSubmit={this.handleSubmit}>\n          <textarea\n            id=\"query\"\n            type=\"textarea\"\n            placeholder=\"write your query\"\n            value={this.state.query}\n            onChange={this.handleChange}\n          />\n          <input type=\"submit\" value=\"Test It\"/>\n        </form>\n        <button onClick={() => {\n          this.checkWithTheSensei(this.props.training, this.state.query)\n        }}\n          >Prove Yourself to The SQL Sensei!</button>\n          <div className=\"sensei\">\n            {\n              this.state.sensei !== \"\" ?\n              <h4>{this.state.sensei}</h4>\n              : null\n            }\n          </div>\n        <div className=\"error\">\n          {\n            this.state.error !== \"\" ?\n            <h4>{this.state.error}</h4>\n            : null\n          }\n        </div>\n        <div className=\"results\">\n          {\n            this.state.results.length > 0 ?\n              <table>\n                <thead>\n                  <tr>\n                    {this.renderTableHeaders()}\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.renderTableData()}\n                </tbody>\n              </table>\n            : null\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Query\n","import React, {Component} from \"react\"\nimport trainingContent from \"../functions/trainingContent.js\"\nimport Query from \"./query.js\"\n\nclass TrainingSelector extends Component {\n  state = {\n    training: \"joinTraining1\"\n  }\n  handleSelect = (event) => {\n    this.setState({\n      training: event.target.value\n    })\n  }\n  render() {\n    return (\n      <>\n        <h2>{this.props.username} - Choose Your Ninja Level!</h2>\n        <button>Joins</button>\n        <button>Aggregate Functions</button>\n        <select onChange={this.handleSelect}>\n          <option\n            value=\"joinTraining1\"\n            default\n            >Ninja Level 1</option>\n          <option\n            value=\"joinTraining2\"\n            >Ninja Level 2</option>\n          <option\n            value=\"joinTraining3\"\n            >Ninja Level 3</option>\n          <option\n            value=\"joinTraining4\"\n            >Ninja Level 4</option>\n        </select>\n        <div className=\"situation\">\n          <h4>Situation</h4>\n          <h5>{trainingContent(this.state.training).situationHeader}</h5>\n          <>\n            {\n              trainingContent(this.state.training).situationBody.map((item, index) => {\n                return(\n                  <p key={index}>{item}</p>\n                )\n              })\n            }\n          </>\n        </div>\n        <div className=\"ninja-moves\">\n          <h4>Your Ninja Moves</h4>\n          <p>{trainingContent(this.state.training).ninjaMoves}</p>\n        </div>\n        <Query\n          training={this.state.training}\n          userId={this.props.userId}\n          username={this.props.username}\n          session={this.props.session}\n        />\n      </>\n    )\n  }\n}\n\nexport default TrainingSelector\n","import React, {Component} from \"react\"\nimport Account from \"./components/account.js\"\nimport TrainingSelector from \"./components/trainingSelector.js\"\nimport \"./App.css\"\n\nclass App extends Component {\n  state = {\n    userId: null,\n    username: null,\n    session: null\n  }\n  setSession = (data) => {\n    this.setState({\n      userId: data.user_id,\n      username: data.username,\n      session: data.token\n    })\n    localStorage.setItem(\"userId\", this.state.userId)\n    localStorage.setItem(\"username\", this.state.username)\n    localStorage.setItem(\"session\", this.state.session)\n  }\n  componentDidMount() {\n    if (localStorage.getItem(\"session\") !== null) {\n      this.setState({\n        userId: localStorage.getItem(\"userId\"),\n        username: localStorage.getItem(\"username\"),\n        session: localStorage.getItem(\"session\")\n      })\n    }\n  }\n  render() {\n    return (\n      <>\n      <div className=\"log-in\">\n        <h1>SQL SENSEI</h1>\n      </div>\n      {\n        this.state.session === null ?\n        <Account\n          setSession={this.setSession}\n        />\n        :\n        <TrainingSelector\n          userId={this.state.userId}\n          username={this.state.username}\n          session={this.state.session}\n        />\n      }\n      </>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}