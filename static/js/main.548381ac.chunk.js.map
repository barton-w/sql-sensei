{"version":3,"sources":["functions/constants.js","components/account.js","functions/trainingContent.js","functions/clientSideValidation.js","functions/evaluate.js","components/query.js","components/joins.js","components/aggregateFunctions.js","components/trainingSelector.js","components/ninjaMoves.js","App.js","serviceWorker.js","index.js"],"names":["base_url","Account","state","showButtons","action","username","pword","confpword","error","handleChange","event","_this","setState","Object","defineProperty","target","id","value","handleSubmit","preventDefault","endpoint","requestBody","password","password_confirmation","fetch","body","JSON","stringify","method","headers","Accept","Content-Type","then","response","json","handleResponse","catch","console","log","data","message","user_id","props","setSession","_this2","this","react_default","a","createElement","className","onClick","onSubmit","type","placeholder","onChange","Component","trainingContent","training","content","situationHeader","situationBody","ninjaMoves","clientSideValidation","query","toLowerCase","replace","test","syntax","globalDecision","_callee","session","promise","regenerator_default","wrap","_context","prev","next","checkData","Promise","res","rej","setTimeout","sent","abrupt","stop","queryCheck","query_statement","Authorization","concat","responseCheck","checkResponse","answerCheck","checkAnswer","results","length","spirit_animal","friend_name","band_name","bands","i","push","includes","vals","values","Query","sensei","senseiMessage","approvedQuery","handleErrors","str","split","getTableHeaders","keys","renderTableHeaders","map","key","index","renderTableData","tabledata","children","j","checkWithTheSensei","_x","_x2","_x3","_evaluate","apply","arguments","evaluate","Joins","handleSelect","default","Fragment","item","rel","href","components_query","userId","AggregateFunctions","TrainingSelector","skill","joinClass","aggregateClass","joins","aggregateFunctions","NinjaMoves","App","token","localStorage","setItem","logOut","clear","getItem","account","react_router_dom","to","react_router","path","exact","render","trainingSelector","assign","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gUACMA,EAAW,wBC0NFC,6MAvNbC,MAAQ,CACNC,aAAa,EACbC,OAAQ,KACRC,SAAU,GACVC,MAAO,GACPC,UAAW,GACXC,MAAO,QAETC,aAAe,SAACC,GACdC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACGH,EAAMK,OAAOC,GAAKN,EAAMK,OAAOE,WAGpCC,aAAe,SAACR,GACdA,EAAMS,iBACN,IAAIC,EAAWpB,EACXqB,EAAc,GACQ,WAAtBV,EAAKT,MAAME,QACbgB,GAAY,SACZC,EAAc,CACZhB,SAAUM,EAAKT,MAAMG,SACrBiB,SAAUX,EAAKT,MAAMI,MACrBiB,sBAAuBZ,EAAKT,MAAMK,aAGpCa,GAAY,eACZC,EAAc,CACZhB,SAAUM,EAAKT,MAAMG,SACrBiB,SAAUX,EAAKT,MAAMI,QAGzBkB,MAAMJ,EAAU,CACdK,KAAMC,KAAKC,UAAUN,GACrBO,OAAQ,OACRC,QAAS,CACPC,OAAS,mBACTC,eAAe,sBAGlBC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAAI,OAAIvB,EAAKwB,eAAeD,KACjCE,MAAM,SAAA5B,GAAK,OAAI6B,QAAQC,IAAI9B,QAE9B2B,eAAiB,SAACI,GACZA,EAAKjB,SACPX,EAAKC,SAAS,CACZJ,MAAO,6CAEA+B,EAAKC,QACd7B,EAAKC,SAAS,CACZJ,MAAO+B,EAAKC,UAEgB,2BAArBD,EAAKlC,SAAS,GACvBM,EAAKC,SAAS,CACZJ,MAAO,2DAEA+B,EAAKE,UACd9B,EAAKC,SAAS,CACZT,aAAa,EACbC,OAAQ,KACRC,SAAU,GACVC,MAAO,GACPC,UAAW,GACXC,MAAO,OAETG,EAAK+B,MAAMC,WAAWJ,6EAGjB,IAAAK,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEW,OAAtBJ,KAAK3C,MAAME,OACX0C,EAAAC,EAAAC,cAAA,MAAIhC,GAAG,kBAAP,0DACE,KAGF6B,KAAK3C,MAAMC,YACX2C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,UAAQE,QAAS,WACfN,EAAKhC,SAAS,CACZR,OAAQ,SACRD,aAAa,MAHjB,kBAKA2C,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBC,QAAS,WAC1CN,EAAKhC,SAAS,CACZR,OAAQ,QACRD,aAAa,MAHjB,WAMA,KAGoB,WAAtB0C,KAAK3C,MAAME,OACX0C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,MAAIhC,GAAG,kBAAP,4CACA8B,EAAAC,EAAAC,cAAA,QACEC,UAAU,eACVE,SAAUN,KAAK3B,cACf4B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,0BACfjC,GAAG,WACHoC,KAAK,OACLnC,MAAO4B,KAAK3C,MAAMG,SAClBgD,YAAY,WACZC,SAAUT,KAAKpC,iBAIrBqC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,0BACfjC,GAAG,QACHoC,KAAK,WACLnC,MAAO4B,KAAK3C,MAAMI,MAClB+C,YAAY,WACZC,SAAUT,KAAKpC,iBAIrBqC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,0BACfjC,GAAG,YACHoC,KAAK,WACLnC,MAAO4B,KAAK3C,MAAMK,UAClB8C,YAAY,mBACZC,SAAUT,KAAKpC,iBAIrBqC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,SACEC,UAAU,8BACVG,KAAK,SACLnC,MAAM,sBAKd6B,EAAAC,EAAAC,cAAA,KAAGhC,GAAG,iBAAiBkC,QAAS,WAC9BN,EAAKhC,SAAS,CACZR,OAAQ,QACRD,aAAa,EACbK,MAAO,SAJX,iCAQuB,KAArBqC,KAAK3C,MAAMM,MACXsC,EAAAC,EAAAC,cAAA,KAAGhC,GAAG,SAAS6B,KAAK3C,MAAMM,OACxB,MAGJ,KAGoB,UAAtBqC,KAAK3C,MAAME,OACX0C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,MAAIhC,GAAG,kBAAP,qCACA8B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eACdE,SAAUN,KAAK3B,cACf4B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,0BACfjC,GAAG,WACHoC,KAAK,OACLnC,MAAO4B,KAAK3C,MAAMG,SAClBgD,YAAY,WACZC,SAAUT,KAAKpC,iBAIrBqC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,0BACfjC,GAAG,QACHoC,KAAK,WACLnC,MAAO4B,KAAK3C,MAAMI,MAClB+C,YAAY,WACZC,SAAUT,KAAKpC,iBAIrBqC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,8BACfG,KAAK,SACLnC,MAAM,cAKd6B,EAAAC,EAAAC,cAAA,KAAGhC,GAAG,iBAAiBkC,QAAS,WAC9BN,EAAKhC,SAAS,CACZR,OAAQ,SACRD,aAAa,EACbK,MAAO,SAJX,mCAQuB,KAArBqC,KAAK3C,MAAMM,MACXsC,EAAAC,EAAAC,cAAA,KAAGhC,GAAG,SAAS6B,KAAK3C,MAAMM,OACxB,MAGJ,KAEJsC,EAAAC,EAAAC,cAAA,OAAKhC,GAAG,yBAlNMuC,aCHP,SAASC,EAAgBC,GACtC,IAAMC,EAAU,CACdC,gBAAiB,GACjBC,cAAe,GACfC,WAAY,IAEd,OAAQJ,GACN,IAAK,gBACHC,EAAQC,gBAAkB,YAC1BD,EAAQE,cAAgB,CAAC,UAAW,kBACpCF,EAAQG,WAAa,yFACrB,MACF,IAAK,gBACLH,EAAQC,gBAAkB,YAC1BD,EAAQE,cAAgB,CAAC,UAAW,kBACpCF,EAAQG,WAAa,iGACnB,MACF,IAAK,gBACLH,EAAQC,gBAAkB,YAC1BD,EAAQE,cAAgB,CAAC,UAAW,iBAAkB,gBAAiB,SACvEF,EAAQG,WAAa,uEACnB,MACF,IAAK,gBACLH,EAAQC,gBAAkB,YAC1BD,EAAQE,cAAgB,CAAC,UAAW,gBAAiB,SACrDF,EAAQG,WAAa,iDACjB,MACJ,IAAK,qBACLH,EAAQC,gBAAkB,WAC1BD,EAAQE,cAAgB,CAAC,SACzBF,EAAQG,WAAa,0FACjB,MACJ,QACE,OAAO,KAEX,OAAOH,ECnCM,SAASI,EAAqBC,GAW3C,OALAA,GAFAA,GAFAA,EAAQA,EAAMC,eAEAC,QAAQ,MAAO,MAEfA,QAAQ,MAAO,IAExB,KAAKC,KAAKH,KACbA,GAAgB,KAEb,WAAWG,KAAKH,GAGhB,QAAQG,KAAKH,GAGb,WAAWG,KAAKH,IAAW,kBAAkBG,KAAKH,IAAW,iBAAiBG,KAAKH,IAAW,SAASG,KAAKH,GAG7G,eAAeG,KAAKH,GACf,CAACI,QAAQ,EAAO3D,MAAO,sDAEzB,CAAC2D,QAAQ,EAAMJ,MAAOA,GALpB,CAACI,QAAQ,EAAO3D,MAAO,wDAHvB,CAAC2D,QAAQ,EAAO3D,MAAO,4CAHvB,CAAC2D,QAAQ,EAAO3D,MAAO,wECT9B4D,EAAiB,8CAEN,SAAAC,EAAwBZ,EAAUM,EAAOO,GAAzC,IAAAC,EAAAtC,EAAA,OAAAuC,EAAAzB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACbC,EAAUpB,EAAUM,EAAOO,GACvBC,EAAU,IAAIO,QAAQ,SAACC,EAAKC,GAC9BC,WAAW,kBAAMF,EAAIX,IAAiB,OAH3BM,EAAAE,KAAA,EAKQL,EALR,cAKTtC,EALSyC,EAAAQ,KAMb7C,QAAQC,IAAI,YAAaiC,GACzBlC,QAAQC,IAAI,sBAAuBL,GAPtByC,EAAAS,OAAA,SAQNlD,GARM,wBAAAyC,EAAAU,SAAAf,6BAWf,IAAMQ,EAAY,SAACpB,EAAUM,EAAOO,GAClC,IAAMe,EAAavB,EAAqBC,GACxC,IAAIsB,EAAWlB,OAmBX,OAAO,EAlBT3C,MAAMxB,EAAW,SAAU,CACzByB,KAAMC,KAAKC,UAAU,CAAC2D,gBAAiBD,EAAWtB,QAClDnC,OAAQ,OACRC,QAAS,CACPC,OAAS,mBACTC,eAAe,mBACfwD,cAAA,UAAAC,OAA0BlB,MAG7BtC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAACE,GACL,IAAIuD,EAAgBC,EAAcjC,EAAUvB,GAC5CG,QAAQC,IAAI,gCAAiCmD,GAC7CpD,QAAQC,IAAI,8BAA+BmD,GAC3CrB,EAAiBqB,IAElBrD,MAAM,SAAA5B,GAAK,OAAI6B,QAAQC,IAAI9B,MAM1BkF,EAAgB,SAACjC,EAAUlB,GAC/B,GAAIA,EAAK4B,OAAQ,CACf,IAAIwB,EAAcC,EAAYnC,EAAUlB,GAExC,OADAF,QAAQC,IAAI,8BAA+BqD,GACpCA,EAEP,OAAO,GAILC,EAAc,SAACnC,EAAUlB,GAC7B,OAAQkB,GACN,IAAK,gBACH,OAA4B,IAAxBlB,EAAKsD,QAAQC,QAAkD,WAAlCvD,EAAKsD,QAAQ,GAAGE,cAKnD,IAAK,gBACH,OAA4B,IAAxBxD,EAAKsD,QAAQC,QAAgD,qBAAhCvD,EAAKsD,QAAQ,GAAGG,YAKnD,IAAK,gBACH,GAA4B,IAAxBzD,EAAKsD,QAAQC,QAAgBvD,EAAKsD,QAAQ,GAAGI,UAAW,CAE1D,IADA,IAAMC,EAAQ,GACLC,EAAI,EAAGA,EAAI5D,EAAKsD,QAAQC,OAAQK,IACvCD,EAAME,KAAK7D,EAAKsD,QAAQM,GAAGF,WAE7B,SAAIC,EAAMG,SAAS,aAAeH,EAAMG,SAAS,mBAAqBH,EAAMG,SAAS,cAMrF,OAAO,EAEX,IAAK,gBACH,GAA4B,KAAxB9D,EAAKsD,QAAQC,QAAiBvD,EAAKsD,QAAQ,GAAGI,UAAW,CAC3D5D,QAAQC,IAAI,mBAEZ,IADA,IAAM4D,EAAQ,GACLC,EAAI,EAAGA,EAAI5D,EAAKsD,QAAQC,OAAQK,IACvCD,EAAME,KAAK7D,EAAKsD,QAAQM,GAAGF,WAG7B,OADA5D,QAAQC,IAAI4D,MACRA,EAAMG,SAAS,gBAAkBH,EAAMG,SAAS,oBAAsBH,EAAMG,SAAS,kBAAoBH,EAAMG,SAAS,iBAAmBH,EAAMG,SAAS,YAAcH,EAAMG,SAAS,aAAeH,EAAMG,SAAS,YAAcH,EAAMG,SAAS,kBAAoBH,EAAMG,SAAS,oBAAsBH,EAAMG,SAAS,oBAAsBH,EAAMG,SAAS,eAAiBH,EAAMG,SAAS,aAAeH,EAAMG,SAAS,eAAiBH,EAAMG,SAAS,SAMjc,OAAO,EAEX,IAAK,qBACH,GAA4B,IAAxB9D,EAAKsD,QAAQC,OAAc,CAE7B,IADA,IAAMQ,EAAOzF,OAAO0F,OAAOhE,EAAKsD,QAAQ,IAC/BM,EAAI,EAAGA,EAAIG,EAAKR,OAAQK,IAC/B,GAAI,UAAUjC,KAAKoC,EAAKH,IACtB,OAAO,EAGX,OAAO,EAEP,OAAO,EAEX,QACE,OAAO,ICqFEK,oNA1LbtG,MAAQ,CACN6D,MAAO,GACP8B,QAAS,GACTrF,MAAO,GACPiG,OAAQ,GACRC,cAAe,GACfC,cAAe,MAEjBlG,aAAe,SAACC,GACdC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACGH,EAAMK,OAAOC,GAAKN,EAAMK,OAAOE,WAGpCC,aAAe,WAEb,IAAMmE,EAAavB,EAAqBnD,EAAKT,MAAM6D,OAC/CsB,EAAWlB,OACb3C,MAAMxB,EAAW,SAAU,CACzByB,KAAMC,KAAKC,UAAU,CAAC2D,gBAAiBD,EAAWtB,QAClDnC,OAAQ,OACRC,QAAS,CACPC,OAAS,mBACTC,eAAe,mBACfwD,cAAA,UAAAC,OAA0B7E,EAAK+B,MAAM4B,YAGxCtC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAAI,OAAIvB,EAAKwB,eAAeD,KACjCE,MAAM,SAAA5B,GAAK,OAAI6B,QAAQC,IAAI9B,KAE5BG,EAAKC,SAAS,CACZiF,QAAS,GACTrF,MAAO6E,EAAW7E,WAIxB2B,eAAiB,SAACF,GACZA,EAASkC,OACXxD,EAAKC,SAAS,CACZiF,QAAS5D,EAAS4D,QAClBrF,MAAO,GACPiG,OAAQ,GACRC,cAAe,GACfC,cAAe,MAEY,IAApB1E,EAASkC,OAClBxD,EAAKC,SAAS,CACZiF,QAAS,GACTrF,MAAOG,EAAKiG,aAAa3E,EAASzB,OAClCiG,OAAQ,GACRC,cAAe,GACfC,cAAe,KAER1E,EAASO,QAClB7B,EAAKC,SAAS,CACZiF,QAAS,GACTrF,MAAO,wBAA0ByB,EAASO,QAC1CiE,OAAQ,GACRC,cAAe,GACfC,cAAe,KAGjBhG,EAAKC,SAAS,CACZiF,QAAS,GACTrF,MAAO,qDACPiG,OAAQ,GACRC,cAAe,GACfC,cAAe,QAIrBC,aAAe,SAACC,GACd,GAAI,MAAM3C,KAAK2C,GAAM,CACnB,IAAIrG,EAAQqG,EAAI7C,cAGhB,MAAO,yCAFPxD,EAAQA,EAAMyD,QAAQ,MAAO,KAAKA,QAAQ,MAAO,IAAIA,QAAQ,KAAM,MACxC6C,MAAM,WAAW,GAAGA,MAAM,SACS,GAE9D,OAAOD,KAGXE,gBAAkB,WAChB,OAAOlG,OAAOmG,KAAKrG,EAAKT,MAAM2F,QAAQ,OAExCoB,mBAAqB,WAEnB,OADgBtG,EAAKoG,kBACNG,IAAI,SAACC,EAAKC,GACvB,OAAOtE,EAAAC,EAAAC,cAAA,MAAImE,IAAKC,GAAQD,QAG5BE,gBAAkB,WAGhB,IAFA,IAAMxF,EAAUlB,EAAKoG,kBACfO,EAAY,GACTnB,EAAE,EAAGA,EAAIxF,EAAKT,MAAM2F,QAAQC,OAAQK,IAAK,CAEhD,IADA,IAAMoB,EAAW,GACRC,EAAE,EAAGA,EAAI3F,EAAQiE,OAAQ0B,IAChCD,EAASnB,KAAKtD,EAAAC,EAAAC,cAAA,MAAImE,IAAKK,GAAI7G,EAAKT,MAAM2F,QAAQM,GAAGtE,EAAQ2F,MAE3DF,EAAUlB,KAAKtD,EAAAC,EAAAC,cAAA,MAAImE,IAAKhB,GAAIoB,IAE9B,OAAOD,KAEXG,mBAAqB,SAAChE,EAAUM,EAAOO,IDxGxB,SAAfoD,EAAAC,EAAAC,GAAA,OAAAC,EAAAC,MAAAjF,KAAAkF,YC0GEC,CAASvE,EAAUM,EAAOO,GAAStC,KAAK,SAACC,GACnCA,EACFtB,EAAKC,SAAS,CACZ6F,OAAQ,UACRC,cAAe,4BACfC,cAAehG,EAAKT,MAAM6D,QAG5BpD,EAAKC,SAAS,CACZ6F,OAAQ,YACRC,cAAe,yCACfC,cAAe,gFAKZ,IAAA/D,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKhC,GAAG,sBACR8B,EAAAC,EAAAC,cAAA,OAAKhC,GAAG,uBACR8B,EAAAC,EAAAC,cAAA,QAAMhC,GAAG,cACP8B,EAAAC,EAAAC,cAAA,YACEhC,GAAG,QACHoC,KAAK,WACLC,YAAY,mBACZpC,MAAO4B,KAAK3C,MAAM6D,MAClBT,SAAUT,KAAKpC,gBAGnBqC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAEW,KAAtBJ,KAAK3C,MAAMuG,OACX3D,EAAAC,EAAAC,cAAA,MAAIC,UAAWJ,KAAK3C,MAAMuG,QAAS5D,KAAK3C,MAAMwG,eAC5C,MAIkB,YAAtB7D,KAAK3C,MAAMuG,OACX3D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQE,QAAS,WACfN,EAAK1B,iBADP,WAKA4B,EAAAC,EAAAC,cAAA,UACEC,UAAU,iBACVC,QAAS,WACTN,EAAK6E,mBAAmB7E,EAAKF,MAAMe,SAAUb,EAAK1C,MAAM6D,MAAOnB,EAAKF,MAAM4B,WAH5E,sCAOAxB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAlB,4CAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAEU,KAArBJ,KAAK3C,MAAMM,MACXsC,EAAAC,EAAAC,cAAA,UAAKH,KAAK3C,MAAMM,OACd,MAGNsC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEXJ,KAAK3C,MAAM2F,QAAQC,OAAS,EAC1BhD,EAAAC,EAAAC,cAAA,SAAOhC,GAAG,iBACR8B,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACGH,KAAKoE,uBAGVnE,EAAAC,EAAAC,cAAA,aACGH,KAAKwE,oBAGV,cAnLM9D,cC6DL0E,6MA9Db/H,MAAQ,CACNuD,SAAU,mBAEZyE,aAAe,SAACxH,GACdC,EAAKC,SAAS,CACZ6C,SAAU/C,EAAMK,OAAOE,iFAIzB,OACE6B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,UAAQhC,GAAG,eAAesC,SAAUT,KAAKqF,cACvCpF,EAAAC,EAAAC,cAAA,UACE/B,MAAM,gBACNkH,SAAO,GAFT,gBAIArF,EAAAC,EAAAC,cAAA,UACE/B,MAAM,iBADR,gBAGA6B,EAAAC,EAAAC,cAAA,UACE/B,MAAM,iBADR,gBAGA6B,EAAAC,EAAAC,cAAA,UACE/B,MAAM,iBADR,kBAKJ6B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIhC,GAAG,UAAP,aACA8B,EAAAC,EAAAC,cAAA,MAAIhC,GAAG,qBACJwC,EAAgBX,KAAK3C,MAAMuD,UAAUE,iBACxCb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqF,SAAA,KAEI5E,EAAgBX,KAAK3C,MAAMuD,UAAUG,cAAcsD,IAAI,SAACmB,EAAMjB,GAC5D,OACEtE,EAAAC,EAAAC,cAAA,KAAGhC,GAAG,oBAAoBmG,IAAKC,GAAQiB,OAMjDvF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,MAAIhC,GAAG,UAAP,oBACA8B,EAAAC,EAAAC,cAAA,KAAGhC,GAAG,qBACHwC,EAAgBX,KAAK3C,MAAMuD,UAAUI,YACxCf,EAAAC,EAAAC,cAAA,KAAGhC,GAAG,WAAWD,OAAO,SAASuH,IAAI,sBAAsBC,KAAK,uDAAhE,4BAGJzF,EAAAC,EAAAC,cAACwF,EAAD,CACE/E,SAAUZ,KAAK3C,MAAMuD,SACrBgF,OAAQ5F,KAAKH,MAAM+F,OACnBpI,SAAUwC,KAAKH,MAAMrC,SACrBiE,QAASzB,KAAKH,MAAM4B,kBAxDVf,aC+DLmF,6MA9DbxI,MAAQ,CACNuD,SAAU,wBAEZyE,aAAe,SAACxH,GACdC,EAAKC,SAAS,CACZ6C,SAAU/C,EAAMK,OAAOE,iFAIzB,OACE6B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,UAAQhC,GAAG,eAAesC,SAAUT,KAAKqF,cACvCpF,EAAAC,EAAAC,cAAA,UACE/B,MAAM,qBACNkH,SAAO,GAFT,gBAIArF,EAAAC,EAAAC,cAAA,UACE/B,MAAM,sBADR,gBAGA6B,EAAAC,EAAAC,cAAA,UACE/B,MAAM,sBADR,gBAGA6B,EAAAC,EAAAC,cAAA,UACE/B,MAAM,sBADR,kBAKJ6B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIhC,GAAG,UAAP,aACA8B,EAAAC,EAAAC,cAAA,MAAIhC,GAAG,qBACJwC,EAAgBX,KAAK3C,MAAMuD,UAAUE,iBACxCb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqF,SAAA,KAEI5E,EAAgBX,KAAK3C,MAAMuD,UAAUG,cAAcsD,IAAI,SAACmB,EAAMjB,GAC5D,OACEtE,EAAAC,EAAAC,cAAA,KAAGhC,GAAG,oBAAoBmG,IAAKC,GAAQiB,OAMjDvF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,MAAIhC,GAAG,UAAP,oBACA8B,EAAAC,EAAAC,cAAA,KAAGhC,GAAG,qBACHwC,EAAgBX,KAAK3C,MAAMuD,UAAUI,YACxCf,EAAAC,EAAAC,cAAA,KAAGhC,GAAG,WAAWD,OAAO,SAASuH,IAAI,sBAAsBC,KAAK,uDAAhE,4BAGJzF,EAAAC,EAAAC,cAACwF,EAAD,CACE/E,SAAUZ,KAAK3C,MAAMuD,SACrBgF,OAAQ5F,KAAKH,MAAM+F,OACnBpI,SAAUwC,KAAKH,MAAMrC,SACrBiE,QAASzB,KAAKH,MAAM4B,kBAxDGf,aCqDlBoF,6MApDbzI,MAAQ,CACN0I,MAAO,KACPC,UAAW,SACXC,eAAgB,kFAET,IAAAlG,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqF,SAAA,KACEtF,EAAAC,EAAAC,cAAA,UAAKH,KAAKH,MAAMrC,SAAhB,+BACAyC,EAAAC,EAAAC,cAAA,UACEhC,GAAG,qBACHiC,UAAWJ,KAAK3C,MAAM2I,UACtB3F,QAAS,WACTN,EAAKhC,SAAS,CACZgI,MAAO,QACPC,UAAW,mBACXC,eAAgB,aAPpB,SAUAhG,EAAAC,EAAAC,cAAA,UACEhC,GAAG,qBACHiC,UAAWJ,KAAK3C,MAAM4I,eACtB5F,QAAS,WACTN,EAAKhC,SAAS,CACZgI,MAAO,YACPC,UAAW,SACXC,eAAgB,uBAPpB,uBAWuB,UAArBjG,KAAK3C,MAAM0I,MACX9F,EAAAC,EAAAC,cAAC+F,EAAD,CACEN,OAAQ5F,KAAKH,MAAM+F,OACnBpI,SAAUwC,KAAKH,MAAMrC,SACrBiE,QAASzB,KAAKH,MAAM4B,UAEpB,KAGmB,cAArBzB,KAAK3C,MAAM0I,MACX9F,EAAAC,EAAAC,cAACgG,EAAD,CACEP,OAAQ5F,KAAKH,MAAM+F,OACnBpI,SAAUwC,KAAKH,MAAMrC,SACrBiE,QAASzB,KAAKH,MAAM4B,UAEpB,aA9CmBf,aCMhB0F,mLANX,OACEnG,EAAAC,EAAAC,cAAA,2CAHmBO,aCyEV2F,0NAhEbhJ,MAAQ,CACNuI,OAAQ,KACRpI,SAAU,KACViE,QAAS,QAEX3B,WAAa,SAACJ,GACZ5B,EAAKC,SAAS,CACZ6H,OAAQlG,EAAKE,QACbpC,SAAUkC,EAAKlC,SACfiE,QAAS/B,EAAK4G,QAEhBC,aAAaC,QAAQ,SAAU1I,EAAKT,MAAMuI,QAC1CW,aAAaC,QAAQ,WAAY1I,EAAKT,MAAMG,UAC5C+I,aAAaC,QAAQ,UAAW1I,EAAKT,MAAMoE,YAE7CgF,OAAS,WACPF,aAAaG,QACb5I,EAAKC,SAAS,CACZ6H,OAAQ,KACRpI,SAAU,KACViE,QAAS,2FAI6B,OAApC8E,aAAaI,QAAQ,YACvB3G,KAAKjC,SAAS,CACZ6H,OAAQW,aAAaI,QAAQ,UAC7BnJ,SAAU+I,aAAaI,QAAQ,YAC/BlF,QAAS8E,aAAaI,QAAQ,8CAI3B,IAAA5G,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,MAAIhC,GAAG,SAAP,cAEuB,OAAvB6B,KAAK3C,MAAMoE,QACXxB,EAAAC,EAAAC,cAACyG,EAAD,CACE9G,WAAYE,KAAKF,aAGnBG,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACE5G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGhC,GAAG,OACJkC,QAASL,KAAKyG,OACdf,KAAK,KAAK1F,KAAK3C,MAAMG,SAFvB,cAGAyC,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAM1I,GAAG,WAAW2I,GAAG,eAAvB,2BAEF7G,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EACnBC,OAAQ,SAACrH,GAAD,OAAWI,EAAAC,EAAAC,cAACgH,EAADnJ,OAAAoJ,OAAA,GAAsBvH,EAAtB,CAA6B+F,OAAQ7F,EAAK1C,MAAMuI,OAAQpI,SAAUuC,EAAK1C,MAAMG,SAAUiE,QAAS1B,EAAK1C,MAAMoE,cAGhIxB,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAOC,KAAK,cACVE,OAAQ,SAACrH,GAAD,OAAWI,EAAAC,EAAAC,cAACa,EAADhD,OAAAoJ,OAAA,GAAgBvH,EAAhB,CAAuB+F,OAAQ7F,EAAK1C,MAAMuI,OAAQpI,SAAUuC,EAAK1C,MAAMG,SAAUiE,QAAS1B,EAAK1C,MAAMoE,uBAvDpHf,cCEE2G,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASR,OAAOjH,EAAAC,EAAAC,cAACwH,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7I,KAAK,SAAA8I,GACjCA,EAAaC","file":"static/js/main.548381ac.chunk.js","sourcesContent":["//dev server\nconst base_url = \"http://localhost:3000\"\n\n//prod server\n//const base_url = \"https://sql-sensei.herokuapp.com\"\n\nexport {base_url}\n","import React, {Component} from \"react\"\nimport {base_url} from \"../functions/constants.js\"\n\nclass Account extends Component {\n  state = {\n    showButtons: true,\n    action: null,\n    username: \"\",\n    pword: \"\",\n    confpword: \"\",\n    error: null\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n  handleSubmit = (event) => {\n    event.preventDefault()\n    let endpoint = base_url\n    let requestBody = {}\n    if (this.state.action === \"create\") {\n      endpoint += \"/users\"\n      requestBody = {\n        username: this.state.username,\n        password: this.state.pword,\n        password_confirmation: this.state.confpword\n      }\n    } else {\n      endpoint += \"/users/login\"\n      requestBody = {\n        username: this.state.username,\n        password: this.state.pword\n      }\n    }\n    fetch(endpoint, {\n      body: JSON.stringify(requestBody),\n      method: \"POST\",\n      headers: {\n        \"Accept\":\"application/json\",\n        \"Content-Type\":\"application/json\"\n      }\n    })\n    .then(response => response.json())\n    .then(json => this.handleResponse(json))\n    .catch(error => console.log(error))\n  }\n  handleResponse = (data) => {\n    if (data.password) {\n      this.setState({\n        error: \"Please check your password and try again\"\n      })\n    } else if (data.message) {\n      this.setState({\n        error: data.message\n      })\n    } else if (data.username[0] === \"has already been taken\") {\n      this.setState({\n        error: \"That username has already been taken. Try another one!\"\n      })\n    } else if (data.user_id) {\n      this.setState({\n        showButtons: true,\n        action: null,\n        username: \"\",\n        pword: \"\",\n        confpword: \"\",\n        error: null\n      })\n      this.props.setSession(data)\n    }\n  }\n  render() {\n    return (\n      <div className=\"account\">\n        {\n          this.state.action === null ?\n          <h3 id=\"account-header\">Create your Account or Log In to train with The Sensei</h3>\n          : null\n        }\n        {\n          this.state.showButtons ?\n          <div className=\"account-actions\">\n            <button onClick={() => {\n              this.setState({\n                action: \"create\",\n                showButtons: false})\n            }}>Create Account</button>\n            <button className=\"button-primary\" onClick={() => {\n              this.setState({\n                action: \"login\",\n                showButtons: false})\n            }}>Log In</button>\n          </div>\n          : null\n        }\n        {\n          this.state.action === \"create\" ?\n          <div className=\"create-account\">\n            <h3 id=\"account-header\">Create your Account, and begin training!</h3>\n            <form\n              className=\"account-form\"\n              onSubmit={this.handleSubmit}>\n              <div className=\"row\">\n                <div className=\"twelve columns\">\n                  <input className=\"form-field u-full-width\"\n                    id=\"username\"\n                    type=\"text\"\n                    value={this.state.username}\n                    placeholder=\"username\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"twelve columns\">\n                  <input className=\"form-field u-full-width\"\n                    id=\"pword\"\n                    type=\"password\"\n                    value={this.state.pword}\n                    placeholder=\"password\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"twelve columns\">\n                  <input className=\"form-field u-full-width\"\n                    id=\"confpword\"\n                    type=\"password\"\n                    value={this.state.confpword}\n                    placeholder=\"confirm password\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"twelve columns\">\n                  <input\n                    className=\"button-primary u-full-width\"\n                    type=\"submit\"\n                    value=\"Create Account\"\n                  />\n                </div>\n              </div>\n            </form>\n            <p id=\"account-toggle\" onClick={() => {\n              this.setState({\n                action: \"login\",\n                showButtons: false,\n                error: null\n              })\n            }}>Log in to an existing account</p>\n            {\n              this.state.error !== \"\" ?\n              <p id=\"error\">{this.state.error}</p>\n              : null\n            }\n          </div>\n          : null\n        }\n        {\n          this.state.action === \"login\" ?\n          <div className=\"log-in\">\n            <h3 id=\"account-header\">Log in to continue your training!</h3>\n            <form className=\"account-form\"\n              onSubmit={this.handleSubmit}>\n              <div className=\"row\">\n                <div className=\"twelve columns\">\n                  <input className=\"form-field u-full-width\"\n                    id=\"username\"\n                    type=\"text\"\n                    value={this.state.username}\n                    placeholder=\"username\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"twelve columns\">\n                  <input className=\"form-field u-full-width\"\n                    id=\"pword\"\n                    type=\"password\"\n                    value={this.state.pword}\n                    placeholder=\"password\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"twelve columns\">\n                  <input className=\"button-primary u-full-width\"\n                    type=\"submit\"\n                    value=\"Log In\"\n                  />\n                </div>\n              </div>\n            </form>\n            <p id=\"account-toggle\" onClick={() => {\n              this.setState({\n                action: \"create\",\n                showButtons: false,\n                error: null\n              })\n            }}>Can't Log In? Create an Account</p>\n            {\n              this.state.error !== \"\" ?\n              <p id=\"error\">{this.state.error}</p>\n              : null\n            }\n          </div>\n          : null\n        }\n        <div id=\"sensei-image\"></div>\n      </div>\n    )\n  }\n}\n\nexport default Account\n","export default function trainingContent(training) {\n  const content = {\n    situationHeader: \"\",\n    situationBody: [],\n    ninjaMoves: \"\"\n  }\n  switch (training) {\n    case \"joinTraining1\":\n      content.situationHeader = \"2 Tables:\"\n      content.situationBody = [\"friends\", \"spirit_animals\"]\n      content.ninjaMoves = \"Find Chris Dirt Stevens' spirit animal! The correct ninja move must return only 1 row.\"\n      break;\n    case \"joinTraining2\":\n    content.situationHeader = \"2 Tables:\"\n    content.situationBody = [\"friends\", \"spirit_animals\"]\n    content.ninjaMoves = \"Find which friend doesn't have a spirit animal! The correct ninja move must return only 1 row.\"\n      break;\n    case \"joinTraining3\":\n    content.situationHeader = \"4 Tables:\"\n    content.situationBody = [\"friends\", \"spirit_animals\", \"friends_music\", \"bands\"]\n    content.ninjaMoves = \"Your friend's spirit animal is a mallard. Find their favorite bands!\"\n      break;\n    case \"joinTraining4\":\n    content.situationHeader = \"3 Tables:\"\n    content.situationBody = [\"friends\", \"friends_music\", \"bands\"]\n    content.ninjaMoves = \"Find the bands that none of your friends like!\"\n        break;\n    case \"aggregateTraining1\":\n    content.situationHeader = \"1 Table:\"\n    content.situationBody = [\"bands\"]\n    content.ninjaMoves = \"Find the average number of records sold. The correct ninja move must return only 1 row.\"\n        break;\n    default:\n      return null\n  }\n  return content\n}\n","export default function clientSideValidation(query) {\n  //Lowercase\n  query = query.toLowerCase()\n  //remove line-breaks\n  query = query.replace(/\\n/g, \" \")\n  //remove escapes\n  query = query.replace(/\\\\/g, \"\")\n  //check for ending with ;, if not, add one\n  if (!/;$/.test(query)) {\n    query = query + \";\"\n  }\n  if (!/^select/i.test(query)) {\n    return {syntax: false, error: \"Make sure your query begins with SELECT\"}\n  }\n  if (!/from/i.test(query)) {\n    return {syntax: false, error: \"Make sure you're selecting FROM somthing\"}\n  }\n  if (!/friends/i.test(query) && !/spirit_animals/i.test(query) && !/friends_music/i.test(query) && !/bands/i.test(query)) {\n    return {syntax: false, error: \"Check your query. What table are you selecting from?\"}\n  }\n  if (/top \\d|top\\d/.test(query)) {\n    return {syntax: false, error: \"Remember in PostgreSQL, use LIMIT rather than TOP.\"}\n  }\n  return {syntax: true, query: query}\n}\n","import clientSideValidation from \"./clientSideValidation.js\"\nimport {base_url} from \"./constants.js\"\n\nlet globalDecision = \"\"\n\nexport default async function evaluate(training, query, session) {\n  checkData(training, query, session)\n  let promise = new Promise((res, rej) => {\n    setTimeout(() => res(globalDecision), 100)\n  })\n  let response = await promise\n  console.log(\"promise: \", promise)\n  console.log(\"evaluate response: \", response)\n  return response\n}\n\nconst checkData = (training, query, session) => {\n  const queryCheck = clientSideValidation(query)\n  if (queryCheck.syntax) {\n    fetch(base_url + \"/query\", {\n      body: JSON.stringify({query_statement: queryCheck.query}),\n      method: \"POST\",\n      headers: {\n        \"Accept\":\"application/json\",\n        \"Content-Type\":\"application/json\",\n        \"Authorization\":`Bearer ${session}`\n      }\n    })\n    .then(response => response.json())\n    .then((json) => {\n      let responseCheck = checkResponse(training, json)\n      console.log(\"response from checkResponse: \", responseCheck)\n      console.log(\"setting globalDecision to: \", responseCheck)\n      globalDecision = responseCheck\n    })\n    .catch(error => console.log(error))\n    } else {\n      return false\n    }\n}\n\nconst checkResponse = (training, data) => {\n  if (data.syntax) {\n    let answerCheck = checkAnswer(training, data)\n    console.log(\"response from checkAnswer: \", answerCheck)\n    return answerCheck\n  } else {\n    return false\n  }\n}\n\nconst checkAnswer = (training, data) => {\n  switch (training) {\n    case \"joinTraining1\":\n      if (data.results.length === 1 && data.results[0].spirit_animal === \"ferret\") {\n        return true\n      } else {\n        return false\n      }\n    case \"joinTraining2\":\n      if (data.results.length === 1 && data.results[0].friend_name === \"Sandwich Waverly\") {\n        return true\n      } else {\n        return false\n      }\n    case \"joinTraining3\":\n      if (data.results.length === 3 && data.results[0].band_name) {\n        const bands = []\n        for (let i = 0; i < data.results.length; i++) {\n          bands.push(data.results[i].band_name)\n        }\n        if (bands.includes(\"Slipknot\") && bands.includes(\"Carlos Santana\") && bands.includes(\"Lady Gaga\")) {\n          return true\n        } else {\n          return false\n        }\n      } else {\n        return false\n      }\n    case \"joinTraining4\":\n      if (data.results.length === 14 && data.results[0].band_name) {\n        console.log(\"TRUTH CONDITION\")\n        const bands = []\n        for (let i = 0; i < data.results.length; i++) {\n          bands.push(data.results[i].band_name)\n        }\n        console.log(bands)\n        if (bands.includes(\"Limp Bizkit\") && bands.includes(\"Waylon Jennings\") && bands.includes(\"Guns N' Roses\") && bands.includes(\"Phil Collins\") && bands.includes(\"Madonna\") && bands.includes(\"Coldplay\") && bands.includes(\"The Who\") && bands.includes(\"White Stripes\") && bands.includes(\"Velvet Revolver\") && bands.includes(\"Destiny's Child\") && bands.includes(\"Black Flag\") && bands.includes(\"Bee Gees\") && bands.includes(\"Spinal Tap\") && bands.includes(\"Tool\")) {\n          return true\n        } else {\n          return false\n        }\n      } else {\n        return false\n      }\n    case \"aggregateTraining1\":\n      if (data.results.length === 1) {\n        const vals = Object.values(data.results[0])\n        for (let i = 0; i < vals.length; i++) {\n          if (/^288229/.test(vals[i])) {\n            return true\n          }\n        }\n        return false\n      } else {\n        return false\n      }\n    default:\n      return false\n  }\n}\n","import React, {Component} from \"react\"\nimport clientSideValidation from \"../functions/clientSideValidation.js\"\nimport evaluate from \"../functions/evaluate.js\"\nimport {base_url} from \"../functions/constants.js\"\nimport \"../App.css\"\n\nclass Query extends Component {\n  state = {\n    query: \"\",\n    results: [],\n    error: \"\",\n    sensei: \"\",\n    senseiMessage: \"\",\n    approvedQuery: \"\"\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n  handleSubmit = () => {\n    //event.preventDefault()\n    const queryCheck = clientSideValidation(this.state.query)\n    if (queryCheck.syntax) {\n      fetch(base_url + \"/query\", {\n        body: JSON.stringify({query_statement: queryCheck.query}),\n        method: \"POST\",\n        headers: {\n          \"Accept\":\"application/json\",\n          \"Content-Type\":\"application/json\",\n          \"Authorization\":`Bearer ${this.props.session}`\n        }\n      })\n      .then(response => response.json())\n      .then(json => this.handleResponse(json))\n      .catch(error => console.log(error))\n    } else {\n      this.setState({\n        results: [],\n        error: queryCheck.error\n      })\n    }\n  }\n  handleResponse = (response) => {\n    if (response.syntax) {\n      this.setState({\n        results: response.results,\n        error: \"\",\n        sensei: \"\",\n        senseiMessage: \"\",\n        approvedQuery: \"\"\n      })\n    } else if (response.syntax === false) {\n      this.setState({\n        results: [],\n        error: this.handleErrors(response.error),\n        sensei: \"\",\n        senseiMessage: \"\",\n        approvedQuery: \"\"\n      })\n    } else if (response.message) {\n      this.setState({\n        results: [],\n        error: \"The SQL Sensei says: \" + response.message,\n        sensei: \"\",\n        senseiMessage: \"\",\n        approvedQuery: \"\"\n      })\n    } else {\n      this.setState({\n        results: [],\n        error: \"The SQL Sensei doesn't like your query. Try again.\",\n        sensei: \"\",\n        senseiMessage: \"\",\n        approvedQuery: \"\"\n      })\n    }\n  }\n  handleErrors = (str) => {\n    if (/^PG/.test(str)) {\n      let error = str.toLowerCase()\n      error = error.replace(/\\n/g, \" \").replace(/\\\\/g, \"\").replace(/\"/g, \"'\")\n      const errorMessage = error.split(\"error: \")[1].split(\" line\")\n      return \"The SQL Sensei spots a syntax error: \" + errorMessage[0]\n    } else {\n      return str\n    }\n  }\n  getTableHeaders = () => {\n    return Object.keys(this.state.results[0])\n  }\n  renderTableHeaders = () => {\n    const headers = this.getTableHeaders()\n    return headers.map((key, index) => {\n      return <th key={index}>{key}</th>\n    })\n  }\n  renderTableData = () => {\n    const headers = this.getTableHeaders()\n    const tabledata = []\n    for (let i=0; i < this.state.results.length; i++) {\n      const children = []\n      for (let j=0; j < headers.length; j++) {\n        children.push(<td key={j}>{this.state.results[i][headers[j]]}</td>)\n      }\n      tabledata.push(<tr key={i}>{children}</tr>)\n    }\n    return tabledata\n  }\ncheckWithTheSensei = (training, query, session) => {\n  // evaluate(training, query, session).then(response => console.log(\"Decision in React:\", response))\n  evaluate(training, query, session).then((response) => {\n    if (response) {\n      this.setState({\n        sensei: \"correct\",\n        senseiMessage: \"The Sensei Says: CORRECT!\",\n        approvedQuery: this.state.query\n      })\n    } else {\n      this.setState({\n        sensei: \"incorrect\",\n        senseiMessage: \"The Sensei Says: INCORRECT! Try again.\",\n        approvedQuery: \"\"\n      })\n    }\n  })\n}\n  render() {\n    return (\n      <div className=\"query\">\n        <div id=\"sensei-image-main\"></div>\n        <div id=\"student-image-main\"></div>\n        <form id=\"query-form\">\n          <textarea\n            id=\"query\"\n            type=\"textarea\"\n            placeholder=\"write your query\"\n            value={this.state.query}\n            onChange={this.handleChange}\n          />\n        </form>\n        <div className=\"senseiMessage\">\n          {\n            this.state.sensei !== \"\" ?\n            <h4 className={this.state.sensei}>{this.state.senseiMessage}</h4>\n            : null\n          }\n        </div>\n        {\n          this.state.sensei !== \"correct\" ?\n          <div>\n            <button onClick={() => {\n              this.handleSubmit()\n            }}>\n              Test It\n            </button>\n            <button\n              className=\"button-primary\"\n              onClick={() => {\n              this.checkWithTheSensei(this.props.training, this.state.query, this.props.session)\n            }}\n              >Prove Yourself to The SQL Sensei!</button>\n          </div>\n          : <button className=\"button-primary\">Save Correct Answer to your Ninja Moves!</button>\n        }\n        <div className=\"error\">\n          {\n            this.state.error !== \"\" ?\n            <h5>{this.state.error}</h5>\n            : null\n          }\n        </div>\n        <div className=\"results\">\n          {\n            this.state.results.length > 0 ?\n              <table id=\"query-results\">\n                <thead>\n                  <tr>\n                    {this.renderTableHeaders()}\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.renderTableData()}\n                </tbody>\n              </table>\n            : null\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Query\n","import React, {Component} from \"react\"\nimport trainingContent from \"../functions/trainingContent.js\"\nimport Query from \"./query.js\"\n\nclass Joins extends Component {\n  state = {\n    training: \"joinTraining1\"\n  }\n  handleSelect = (event) => {\n    this.setState({\n      training: event.target.value\n    })\n  }\n  render() {\n    return(\n      <div className=\"training\">\n        <div className=\"choose-move\">\n          <h4>Choose Your Ninja Move</h4>\n          <select id=\"moves-select\" onChange={this.handleSelect}>\n            <option\n              value=\"joinTraining1\"\n              default\n              >Ninja Move 1</option>\n            <option\n              value=\"joinTraining2\"\n              >Ninja Move 2</option>\n            <option\n              value=\"joinTraining3\"\n              >Ninja Move 3</option>\n            <option\n              value=\"joinTraining4\"\n              >Ninja Move 4</option>\n          </select>\n        </div>\n        <div className=\"training-summary\">\n          <div className=\"situation\">\n            <h5 id=\"header\">Situation</h5>\n            <h6 id=\"situation-content\">\n              {trainingContent(this.state.training).situationHeader}</h6>\n            <>\n              {\n                trainingContent(this.state.training).situationBody.map((item, index) => {\n                  return(\n                    <p id=\"situation-content\" key={index}>{item}</p>\n                  )\n                })\n              }\n            </>\n          </div>\n          <div className=\"ninja-moves\">\n            <h5 id=\"header\">Your Ninja Moves</h5>\n            <p id=\"situation-content\">\n              {trainingContent(this.state.training).ninjaMoves}</p>\n            <a id=\"postgres\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.postgresql.org/docs/9.2/sql-syntax.html\">PostgreSQL syntax only</a>\n          </div>\n        </div>\n        <Query\n          training={this.state.training}\n          userId={this.props.userId}\n          username={this.props.username}\n          session={this.props.session}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Joins\n","import React, {Component} from \"react\"\nimport trainingContent from \"../functions/trainingContent.js\"\nimport Query from \"./query.js\"\n\nclass AggregateFunctions extends Component {\n  state = {\n    training: \"aggregateTraining1\"\n  }\n  handleSelect = (event) => {\n    this.setState({\n      training: event.target.value\n    })\n  }\n  render() {\n    return(\n      <div className=\"training\">\n        <div className=\"choose-move\">\n          <h4>Choose Your Ninja Move</h4>\n          <select id=\"moves-select\" onChange={this.handleSelect}>\n            <option\n              value=\"aggregateTraining1\"\n              default\n              >Ninja Move 1</option>\n            <option\n              value=\"aggregateTraining2\"\n              >Ninja Move 2</option>\n            <option\n              value=\"aggregateTraining3\"\n              >Ninja Move 3</option>\n            <option\n              value=\"aggregateTraining4\"\n              >Ninja Move 4</option>\n          </select>\n        </div>\n        <div className=\"training-summary\">\n          <div className=\"situation\">\n            <h5 id=\"header\">Situation</h5>\n            <h6 id=\"situation-content\">\n              {trainingContent(this.state.training).situationHeader}</h6>\n            <>\n              {\n                trainingContent(this.state.training).situationBody.map((item, index) => {\n                  return(\n                    <p id=\"situation-content\" key={index}>{item}</p>\n                  )\n                })\n              }\n            </>\n          </div>\n          <div className=\"ninja-moves\">\n            <h5 id=\"header\">Your Ninja Moves</h5>\n            <p id=\"situation-content\">\n              {trainingContent(this.state.training).ninjaMoves}</p>\n            <a id=\"postgres\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.postgresql.org/docs/9.2/sql-syntax.html\">PostgreSQL syntax only</a>\n          </div>\n        </div>\n        <Query\n          training={this.state.training}\n          userId={this.props.userId}\n          username={this.props.username}\n          session={this.props.session}\n        />\n      </div>\n    )\n  }\n}\n\nexport default AggregateFunctions\n","import React, {Component} from \"react\"\nimport Joins from \"./joins.js\"\nimport AggregateFunctions from \"./aggregateFunctions.js\"\n\nclass TrainingSelector extends Component {\n  state = {\n    skill: null,\n    joinClass: \"button\",\n    aggregateClass: \"button\"\n  }\n  render() {\n    return (\n      <>\n        <h3>{this.props.username} - Choose Your Ninja Skill!</h3>\n        <button\n          id=\"ninja-skill-button\"\n          className={this.state.joinClass}\n          onClick={() => {\n          this.setState({\n            skill: \"joins\",\n            joinClass: \"button-secondary\",\n            aggregateClass: \"button\"\n          })\n        }}>Joins</button>\n        <button\n          id=\"ninja-skill-button\"\n          className={this.state.aggregateClass}\n          onClick={() => {\n          this.setState({\n            skill: \"aggregate\",\n            joinClass: \"button\",\n            aggregateClass: \"button-secondary\"\n          })\n        }}>Aggregate Functions</button>\n        {\n          this.state.skill === \"joins\" ?\n          <Joins\n            userId={this.props.userId}\n            username={this.props.username}\n            session={this.props.session}\n          />\n          : null\n        }\n        {\n          this.state.skill === \"aggregate\" ?\n          <AggregateFunctions\n            userId={this.props.userId}\n            username={this.props.username}\n            session={this.props.session}\n          />\n          : null\n        }\n      </>\n    )\n  }\n}\n\nexport default TrainingSelector\n","import React, {Component} from \"react\"\n\nclass NinjaMoves extends Component {\n  render() {\n    return(\n      <h1>Your Saved Ninja Moves</h1>\n    )\n  }\n}\n\nexport default NinjaMoves\n","import React, {Component} from \"react\"\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\"\nimport Account from \"./components/account.js\"\nimport TrainingSelector from \"./components/trainingSelector.js\"\nimport NinjaMoves from \"./components/ninjaMoves.js\"\nimport \"./css/normalize.css\"\nimport \"./css/skeleton.css\"\nimport \"./App.css\"\n\n\nclass App extends Component {\n  state = {\n    userId: null,\n    username: null,\n    session: null\n  }\n  setSession = (data) => {\n    this.setState({\n      userId: data.user_id,\n      username: data.username,\n      session: data.token\n    })\n    localStorage.setItem(\"userId\", this.state.userId)\n    localStorage.setItem(\"username\", this.state.username)\n    localStorage.setItem(\"session\", this.state.session)\n  }\n  logOut = () => {\n    localStorage.clear()\n    this.setState({\n      userId: null,\n      username: null,\n      session: null\n    })\n  }\n  componentDidMount() {\n    if (localStorage.getItem(\"session\") !== null) {\n      this.setState({\n        userId: localStorage.getItem(\"userId\"),\n        username: localStorage.getItem(\"username\"),\n        session: localStorage.getItem(\"session\")\n      })\n    }\n  }\n  render() {\n    return (\n      <div className=\"app\">\n          <h1 id=\"title\">SQL SENSEI</h1>\n        {\n          this.state.session === null ?\n          <Account\n            setSession={this.setSession}\n          />\n          :\n          <Router>\n            <nav>\n              <a id=\"link\"\n                onClick={this.logOut}\n                href=\"/\">{this.state.username} | Log Out</a>\n              <Link id=\"link-cta\" to=\"/ninjamoves\">Your Saved Ninja Moves</Link>\n            </nav>\n            <Route path=\"/\" exact\n              render={(props) => <TrainingSelector {...props} userId={this.state.userId} username={this.state.username} session={this.state.session}\n              />}\n            />\n            <Route path=\"/ninjamoves\"\n              render={(props) => <NinjaMoves {...props} userId={this.state.userId} username={this.state.username} session={this.state.session}\n              />}\n            />\n          </Router>\n        }\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}